---
- hosts: all
  vars:
    database_name: "maindb"
    pg_admin_name: "postgres"
    pg_admin_password: "postgres"
    pghost: "localhost"
    pg_user_name: "vr_user"
    pg_user_password: "ChanGeMe2021"
  tasks:
    - name: Check if database is exist
      community.postgresql.postgresql_info:
        login_host: "{{ pghost }}"
        login_user: "{{ pg_admin_name }}"
        login_password: "{{ pg_admin_password }}"
        filter:
          - "databases"
      register: pg_info
    - name: Create database if not exist
      block:
        - name: Say status 
          ansible.builtin.debug:
            msg: "Database is not exist!"
        - name: Copy dadabase shchema
          ansible.builtin.copy:
            src: "./files/maindb.sql" 
            dest: "/tmp/maindb.sql" 
        - name: Create database
          community.postgresql.postgresql_db:
            login_host: "{{ pghost }}"
            login_user: "{{ pg_admin_name }}"
            login_password: "{{ pg_admin_password }}"
            name: "{{ database_name }}"
            encoding: UTF-8
            # lc_collate: ru_RU.utf8
            # lc_ctype: ru_RU.utf8
        - name: Create role 
          community.postgresql.postgresql_user:
            login_host: "{{ pghost }}"
            login_user: "{{ pg_admin_name }}"
            login_password: "{{ pg_admin_password }}"
            name: "{{ pg_user_name }}"
            password: "{{ pg_user_password }}"
        - name: Restore database
          community.postgresql.postgresql_db:
            login_host: "{{ pghost }}"
            login_user: "{{ pg_admin_name }}"
            login_password: "{{ pg_admin_password }}"
            name: "{{ database_name }}"
            state: restore
            target: "/tmp/maindb.sql"
          register: pg_restore_result
          failed_when: "'ERROR' in pg_restore_result.stderr"
        - name: Print restore result  
          ansible.builtin.debug:
            msg: "{{ pg_restore_result }}"
      rescue:
        - name: Rollback database
          community.postgresql.postgresql_db:
            login_host: "{{ pghost }}"
            login_user: "{{ pg_admin_name }}"
            login_password: "{{ pg_admin_password }}"
            name: "{{ database_name }}"
            state: absent
        - name: Print when errors
          ansible.builtin.debug:
            msg: "Restore failed, because: {{ pg_restore_result.stderr_lines[1] }}"
      when: pg_info.databases[database_name] is not defined

